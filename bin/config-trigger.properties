#=========================================
# Trigger Engine Initialization Properties
#=========================================

# Delay after which Trigger Task will be executed for checking new messages
# Default delay is in minutes if need to give in seconds then configure property 
# triggerengine.delayseconds
triggerengine.delayseconds=5

# Compulsory Property
# If given system will process messages only for those respository id's
# Multiple Id's should be separated with comma(,)
# IN NEW VERSION i.e Metrixtrack8 this is just name of client database Example test_MT or png_MT or cisco_MT 
triggerengine.repositoryids=pg_MT

# Optional Property But very useful if a Client has concept of Team Like AXA,BSC etc
# If given system will process queue messages with given ids only. If this property is not configured then in that case 
# Engine will look into queuemessage table with triggergroup_id=0 and process those messages only.
# Multiple Id's should be separated with comma(,)
triggerengine.triggergroupids=

# This property is dependent on triggerengine.triggergroupids 
# If this property is set to true 
#    then processing of all configured triggergroups will start with start of ENGINE
# If this property is set to false
#    then processing all configured triggergroups will be sequential one message at a time, depending 
#    on creation time of queuemessages    
triggerengine.triggergroups.triggerallsametime=false

# Path of thread's configuration xml file i.e config-trigger-thread.xml. 
# Relative path should be with reference of base deployment folder For example 
# trigger folder in standard deployment
triggerengine.config.filepath=./config/config-trigger-thread.xml

# Maximum no of dataset to be included in a single data packet
triggerengine.datapacket.maxparamperpacket=100

# If enabled will force metric calculation engine to register updateevent for each metric and period
triggerengine.metriccalculation.disableupdateventslogging=false
triggerengine.metriccalculation.batchsize=-1
triggerengine.metriccalculation.maxthreadcount=100
triggerengine.metriccalculation.preloadresultincache=true
triggerengine.metriccalculation.loadresultifnotincache=true

# If enabled will force alert calculation engine to register updateevent for each metric and period
triggerengine.alertcalculation.disableupdateventslogging=false

# If enabled will force monitor calculation engine to register updateevent for each metric and period
triggerengine.monitorcalculation.disableupdateventslogging=false

# Whether parameters fetched should be exported to excel or not
triggerengine.exportparametertoexcel.enabled=false
triggerengine.exportparametertoexcel.filepath=./storage/Parameters_tid_{0}_{1}.xls

#==========================================
# Rule Engine Properties
#==========================================
triggerengine.ruleengine.failurerule.emailtemplate.filepath=./template/SendFailureEmailTemplate.html


#==========================================
# Report Scheduler Properties
#==========================================

# Whether to run report scheduler as part of trigger engine or not
triggerengine.reportscheduler.enabled=true
triggerengine.reportscheduler.repositoryids=pg_MT

#==========================================
# DataFetch Scheduler Properties
#==========================================

# Whether to run datafetch scheduler as part of trigger engine or not
triggerengine.datafetchscheduler.enabled=false
triggerengine.datafetchscheduler.repositoryids=pg_MT
triggerengine.datafetchscheduler.delayInSecond=1
triggerengine.datafetch.maxthreadcount=100

#==========================================
# MetricCalculationPreparation Scheduler Properties
#==========================================

# Whether to run MetricCalculationPreparation scheduler as part of trigger engine or not
triggerengine.metriccalculationpreparationscheduler.enabled=false
triggerengine.metriccalculationpreparationscheduler.delayInSecond=30

#==========================================
# Calculation Scheduler Properties
#==========================================

# Whether to run calculation scheduler as part of trigger engine or not
triggerengine.calculationscheduler.enabled=true
triggerengine.calculationscheduler.repositoryids=pg_MT
triggerengine.calculationscheduler.delay=1

#==========================================
# Report Extraction Scheduler Properties
#==========================================

# Whether to run reportextraction scheduler as part of trigger engine or not
triggerengine.reportextractionscheduler.enabled=false
triggerengine.reportextractionscheduler.repositoryids=
triggerengine.reportextractionscheduler.delay=1


#==========================================
# Form Scheduling Properties
#==========================================

# Whether to run form scheduling as part of trigger engine or not
triggerengine.formscheduling.enabled=false
triggerengine.formscheduling.repositoryids=
triggerengine.formscheduling.enablereminder=false


#==========================================
# DataValidation Scheduling Properties
#==========================================

# Whether to run datavalidation scheduling as part of trigger engine or not
triggerengine.datavalidationscheduling.enabled=false
triggerengine.datavalidationscheduling.repositoryids=
triggerengine.datavalidationscheduling.delay=10
triggerengine.datavalidationscheduling.config.filepath=./config/config-datavalidation.properties


#==========================================
# ScorecardReport Scheduling Properties
#==========================================

# Whether to run scorecard report scheduling as part of trigger engine or not
triggerengine.scorecardreportscheduling.enabled=false
triggerengine.scorecardreportscheduling.repositoryids=

#==========================================
# ScorecardReport Delivery Properties
#==========================================

# Whether to run scorecard report delivery as part of trigger engine or not
triggerengine.scorecardreportdelivery.enabled=false
triggerengine.scorecardreportdelivery.repositoryids=
triggerengine.scorecardreportdelivery.delay=5
# No of records to pick from table for delivering scorecards
triggerengine.scorecardreportdelivery.batchsize=1
triggerengine.scorecardreportdelivery.config.filepath=./config/config-scorecardreport.properties

#==========================================
# Currency Fetch Service Properties
#==========================================

# Whether to run currency fetch service as part of trigger engine or not
# This is the thread which reads data from external sources and update currencyconversionfactor table in MetrixTrack
# Usecase for this is Unit Conversion where we need factor for converting one currency to another. That factor may
# need to read from client database/excel for that purpose this thread should be enabled
triggerengine.currencyconversionfactorfetchservice.enabled=false
triggerengine.currencyconversionfactorfetchservice.repositoryid=
triggerengine.currencyconversionfactorfetchservice.delay=5
# DataRoutine id from MetrixTrack database. That routine will be having information about datasource and query 
# to be executed on that datasource. First need to define that in MetrixTrack Database then only Currency Fetch Service can work 
triggerengine.currencyconversionfactorfetchservice.dataroutineid=0
triggerengine.currencyconversionfactorfetchservice.config.filepath=./config/config-currency.properties

#==========================================
# Email Delivery Properties
#==========================================

# Whether to run email delivery as part of trigger engine or not
triggerengine.emaildelivery.enabled=false
triggerengine.emaildelivery.delay=1
triggerengine.emaildelivery.configfolderpath=./config/


#==========================================
# SMS Delivery Properties
#==========================================

# Whether to run sms delivery as part of trigger engine or not
triggerengine.smsdelivery.enabled=false
triggerengine.smsdelivery.delay=5
triggerengine.smsdelivery.repositoryids=globalMT
# If this url is given then engine will send sms by sending mobile no & content to that url
# if url is not given then it will call SMSutil which will use config-core variable mtclient.sendsms.uselocalmodem to decide how to send sms
triggerengine.smsdelivery.maxretrycount=5

#==========================================
# ScorecardDataUpdate Delivery Properties
#==========================================

# Whether to run Scorecard Data Update as part of trigger engine or not
triggerengine.scorecarddataupdatescheduler.enabled=false
triggerengine.scorecarddataupdatescheduler.delayInSecond=30

#==========================================
# Acquire "TriggerLock" delay time
#==========================================

# Delay after which AcquireLock will be executed to get "TriggerLock"
# There is no default delay. Always specify delay in milli seconds 
# acquirelock.delaymilliseconds
acquirelock.delay=300000


#==========================================
# ScorecardDataUpdate Properties
#==========================================
triggerengine.outputdataupdate.parallelsectionupdate.maxthreadcount=8

#=====================================================================================================
# DataFetch TerminalNodeCombinationRawDataSet Write to File Location('0' : MetricId, '1' : PeriodId )
#=====================================================================================================
triggerengine.datafetch.writeMetricDataToFile.terminalNodeCombinationRawDataSet=D:/uploadedFiles/TerminalNodeCombinationRawDataSet_{0}_{1}.csv

# Read Data from Connector OR Read from MetricResultFOR Table(for given metricId and periodId)
triggerengine.datafetch.forceDataConnectorCallAlwaysSkipRawDataSetCheck=false
